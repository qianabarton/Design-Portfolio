"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _debounce = _interopRequireDefault(require("debounce"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _scrollContext = require("./scrollContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ScrollingProvider = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(ScrollingProvider, _React$Component);

  function ScrollingProvider() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "state", {
      selected: ''
    });

    _defineProperty(_assertThisInitialized(_this), "refList", {});

    _defineProperty(_assertThisInitialized(_this), "handleScroll", function () {
      var selected = Object.entries(_this.refList).reduce(function (acc, _ref) {
        var key = _ref[0],
            value = _ref[1];

        var _value$current$getBou = value.current.getBoundingClientRect(),
            top = _value$current$getBou.top;

        var differenceFromTop = Math.abs(top);
        return differenceFromTop < acc.differenceFromTop ? {
          differenceFromTop: differenceFromTop,
          key: key
        } : acc;
      }, {
        differenceFromTop: 9999,
        key: ''
      });
      if (_this.state.selected !== selected.key) _this.setState({
        selected: selected.key
      });
    });

    _defineProperty(_assertThisInitialized(_this), "debounceScroll", (0, _debounce["default"])(_this.handleScroll, _this.props.debounceDelay || 50));

    _defineProperty(_assertThisInitialized(_this), "registerRef", function (id) {
      var _extends2;

      var newRef = _react["default"].createRef();

      _this.refList = _extends(_extends({}, _this.refList), {}, (_extends2 = {}, _extends2[id] = newRef, _extends2));
      return newRef;
    });

    _defineProperty(_assertThisInitialized(_this), "scrollTo", function (section) {
      var _this$props = _this.props,
          behavior = _this$props.scrollBehavior,
          offset = _this$props.offset;
      var sectionRef = _this.refList[section];
      if (!sectionRef) return console.warn('Section ID not recognized!'); // eslint-disable-line

      var top = sectionRef.current.offsetTop + offset;
      return _this.setState({
        selected: section
      }, function () {
        return window.scrollTo({
          top: top,
          behavior: behavior
        });
      });
    });

    return _this;
  }

  var _proto = ScrollingProvider.prototype;

  _proto.componentDidMount = function componentDidMount() {
    document.addEventListener('scroll', this.debounceScroll, true);
    this.handleScroll();
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    document.removeEventListener('scroll', this.debounceScroll, true);
  };

  _proto.render = function render() {
    var selected = this.state.selected;
    var children = this.props.children;
    var value = {
      registerRef: this.registerRef,
      scrollTo: this.scrollTo,
      refList: this.refList,
      selected: selected
    };
    return /*#__PURE__*/_react["default"].createElement(_scrollContext.Provider, {
      value: value
    }, children);
  };

  return ScrollingProvider;
}(_react["default"].Component);

exports["default"] = ScrollingProvider;

_defineProperty(ScrollingProvider, "defaultProps", {
  debounceDelay: 50,
  scrollBehavior: 'smooth',
  children: null,
  offset: 0
});

ScrollingProvider.propTypes = process.env.NODE_ENV !== "production" ? {
  /** ms. to wait until the calculation of the current section */
  debounceDelay: _propTypes["default"].number,

  /** scrolling style */
  scrollBehavior: _propTypes["default"].oneOf(['auto', 'smooth']),

  /** Vertical offset regarding the Section */
  offset: _propTypes["default"].number,

  /** React component */
  children: _propTypes["default"].node
} : {};
module.exports = exports.default;