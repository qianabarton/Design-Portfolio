function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { useMemo, useContext } from 'react';
import PropTypes from 'prop-types';
import { ScrollContext } from './scrollContext';

var Section = function Section(_ref) {
  var id = _ref.id,
      children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, ["id", "children"]);

  var _useContext = useContext(ScrollContext),
      registerRef = _useContext.registerRef;

  var ref = useMemo(function () {
    return registerRef(id);
  }, [id]);
  return /*#__PURE__*/React.createElement("section", _extends({
    ref: ref,
    id: id
  }, rest), children);
};

Section.propTypes = process.env.NODE_ENV !== "production" ? {
  /** Section ID */
  id: PropTypes.string.isRequired,

  /** Section content */
  children: PropTypes.node
} : {};
Section.defaultProps = {
  children: null
};
export default Section;